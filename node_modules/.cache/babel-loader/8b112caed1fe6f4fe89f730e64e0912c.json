{"ast":null,"code":"var _jsxFileName = \"/home/alonso/GitHub/RecetasMH/src/components/AddRecipe.jsx\";\nimport React, { useState } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport styled from \"styled-components\";\nimport { useRecoilState } from \"recoil\";\nimport { sessionState } from \"../recoil/atoms\";\nimport { OK, Error, Title } from \"../style/styles\";\nconst ADD_RECIPE_MUTATION = gql`\n    mutation addRecipe($userid: ID!, $token: String!, $title: String!, $description: String!, $steps: [StepInput!]!, $ingredients: [ID!]!, $mainImage: FileInput!) {\n        addRecipe(userid: $userid, token: $token, title: $title, description: $description, steps: $steps, ingredients: $ingredients, mainImage: $mainImage) {\n            title\n            steps {\n                description\n                image {\n                    mimetype\n                }\n            }\n            ingredients {\n                _id\n            }\n            mainImage {\n                mimetype\n            }\n        }\n    }\n`;\nexport default (() => {\n  const [session] = useRecoilState(sessionState);\n  const [addRecipe, {\n    data\n  }] = useMutation(ADD_RECIPE_MUTATION, {// refetchQueries: [{ query: INGREDIENTS }],\n    // onError(err) {\n    //     setError(err.message);\n    // }\n  });\n\n  if (data) {\n    console.log(data.addRecipe);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"ModuleAddIngredient\",\n    onSubmit: e => {\n      e.preventDefault();\n      inputTitle = document.getElementById(\"inputTitle\").value;\n      inputDescription = document.getElementById(\"inputDescription\").value;\n      addRecipe({\n        variables: {\n          userid: localStorage.getItem(\"userid\"),\n          token: localStorage.getItem(\"token\"),\n          title: inputTitle,\n          description: inputDescription,\n          steps: steps,\n          ingredients: [\"5efcb5ca1009da06c45f2151\"],\n          mainImage: {\n            url: \"url\",\n            mimetype: \"mimetype\",\n            encoding: \"encoding\"\n          }\n        }\n      }); // setError(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"sources":["/home/alonso/GitHub/RecetasMH/src/components/AddRecipe.jsx"],"names":["React","useState","gql","useMutation","styled","useRecoilState","sessionState","OK","Error","Title","ADD_RECIPE_MUTATION","session","addRecipe","data","console","log","e","preventDefault","inputTitle","document","getElementById","value","inputDescription","variables","userid","localStorage","getItem","token","title","description","steps","ingredients","mainImage","url","mimetype","encoding"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,EAAT,EAAaC,KAAb,EAAoBC,KAApB,QAAiC,iBAAjC;AAEA,MAAMC,mBAAmB,GAAGR,GAAI;;;;;;;;;;;;;;;;;;CAAhC;AAoBA,gBAAe,MAAM;AACnB,QAAM,CAACS,OAAD,IAAYN,cAAc,CAACC,YAAD,CAAhC;AAEA,QAAM,CAACM,SAAD,EAAY;AAAEC,IAAAA;AAAF,GAAZ,IAAwBV,WAAW,CAACO,mBAAD,EAAsB,CAC7D;AAEA;AACA;AACA;AAL6D,GAAtB,CAAzC;;AAQA,MAAIG,IAAJ,EAAU;AACRC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACD,SAAjB;AACD;;AAED,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,qBAAhB;AACE,IAAA,QAAQ,EAAKI,CAAC,IAAI;AACdA,MAAAA,CAAC,CAACC,cAAF;AACAC,MAAAA,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,EAAsCC,KAAnD;AACAC,MAAAA,gBAAgB,GAAGH,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CC,KAA/D;AACAT,MAAAA,SAAS,CAAC;AAAEW,QAAAA,SAAS,EAAE;AAAEC,UAAAA,MAAM,EAAEC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAV;AAA0CC,UAAAA,KAAK,EAAEF,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAjD;AACnBE,UAAAA,KAAK,EAAEV,UADY;AACAW,UAAAA,WAAW,EAAEP,gBADb;AAC+BQ,UAAAA,KAAK,EAAEA,KADtC;AAC6CC,UAAAA,WAAW,EAAE,CAAC,0BAAD,CAD1D;AACwFC,UAAAA,SAAS,EAAE;AAACC,YAAAA,GAAG,EAAE,KAAN;AAAaC,YAAAA,QAAQ,EAAE,UAAvB;AAAmCC,YAAAA,QAAQ,EAAE;AAA7C;AADnG;AAAb,OAAD,CAAT,CAJc,CAMd;AACH,KARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAgBD,CA/BD","sourcesContent":["import React, { useState } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport styled from \"styled-components\";\nimport { useRecoilState } from \"recoil\";\nimport { sessionState } from \"../recoil/atoms\";\nimport { OK, Error, Title } from \"../style/styles\";\n\nconst ADD_RECIPE_MUTATION = gql`\n    mutation addRecipe($userid: ID!, $token: String!, $title: String!, $description: String!, $steps: [StepInput!]!, $ingredients: [ID!]!, $mainImage: FileInput!) {\n        addRecipe(userid: $userid, token: $token, title: $title, description: $description, steps: $steps, ingredients: $ingredients, mainImage: $mainImage) {\n            title\n            steps {\n                description\n                image {\n                    mimetype\n                }\n            }\n            ingredients {\n                _id\n            }\n            mainImage {\n                mimetype\n            }\n        }\n    }\n`;\n\nexport default () => {\n  const [session] = useRecoilState(sessionState);\n\n  const [addRecipe, { data }] = useMutation(ADD_RECIPE_MUTATION, {\n    // refetchQueries: [{ query: INGREDIENTS }],\n\n    // onError(err) {\n    //     setError(err.message);\n    // }\n  })\n\n  if (data) {\n    console.log(data.addRecipe);\n  }\n\n  return (\n    <div>\n      <form className=\"ModuleAddIngredient\"\n        onSubmit = { e => {\n            e.preventDefault();\n            inputTitle = document.getElementById(\"inputTitle\").value;\n            inputDescription = document.getElementById(\"inputDescription\").value;\n            addRecipe({ variables: { userid: localStorage.getItem(\"userid\"), token: localStorage.getItem(\"token\"),\n                title: inputTitle, description: inputDescription, steps: steps, ingredients: [\"5efcb5ca1009da06c45f2151\"], mainImage: {url: \"url\", mimetype: \"mimetype\", encoding: \"encoding\"} }});\n            // setError(null);\n        }}\n      >\n\n      </form>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}