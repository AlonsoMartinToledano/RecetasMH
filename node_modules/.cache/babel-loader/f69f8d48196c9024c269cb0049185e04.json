{"ast":null,"code":"var _jsxFileName = \"/home/alonso/GitHub/RecetasMH/src/components/Logout.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport styled from \"styled-components\";\nimport { useRecoilState } from \"recoil\";\nimport { sessionState, bodyState } from \"../recoil/atoms\";\nimport { OK, Error, Title } from \"../style/styles\";\nconst LOGOUT_MUTATION = gql`\n  mutation logout($userid: ID!, $token: String!) {\n    logout(userid: $userid, token: $token) {\n      _id\n    }\n  }\n`;\nexport default (() => {\n  const [session, setSession] = useRecoilState(sessionState);\n  const [body, setBody] = useRecoilState(bodyState);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [logoutMutation, {\n    data\n  }] = useMutation(LOGOUT_MUTATION, {\n    onError(error) {\n      setErrorMessage(\"Ha ocurrido un error inesperado, vuelve a intentarlo más tarde\");\n    }\n\n  });\n\n  const logout = (userid, token) => {\n    logoutMutation({\n      variables: {\n        userid,\n        token\n      }\n    });\n  };\n\n  if (data) {\n    setSession({\n      logged: false,\n      userid: \"\",\n      token: \"\"\n    });\n    setBody(\"Login\");\n  }\n\n  return /*#__PURE__*/React.createElement(Logout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Logout\"), errorMessage !== \"\" ? /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 30\n    }\n  }, errorMessage) : null, session.logged ? /*#__PURE__*/React.createElement(Button, {\n    onClick: () => logout(session.userid, session.token),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Confirme que desea salir\") : null);\n});\nconst Logout = styled.div`\n  color: #333333;\n  margin: 2em;\n`;\nconst Button = styled.button`\n  color: black;\n  font-weight: bold;\n  height: 30px;\n  width: 500px;\n  border: 1px solid #333;\n  &:hover {\n    background-color: #bbbbbb;\n    cursor: pointer;\n  }\n`;","map":{"version":3,"sources":["/home/alonso/GitHub/RecetasMH/src/components/Logout.jsx"],"names":["React","useState","useEffect","gql","useMutation","styled","useRecoilState","sessionState","bodyState","OK","Error","Title","LOGOUT_MUTATION","session","setSession","body","setBody","errorMessage","setErrorMessage","logoutMutation","data","onError","error","logout","userid","token","variables","logged","Logout","div","Button","button"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,iBAAxC;AACA,SAASC,EAAT,EAAaC,KAAb,EAAoBC,KAApB,QAAiC,iBAAjC;AAEA,MAAMC,eAAe,GAAGT,GAAI;;;;;;CAA5B;AAQA,gBAAe,MAAM;AACnB,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBR,cAAc,CAACC,YAAD,CAA5C;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBV,cAAc,CAACE,SAAD,CAAtC;AACA,QAAM,CAACS,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACkB,cAAD,EAAiB;AAAEC,IAAAA;AAAF,GAAjB,IAA6BhB,WAAW,CAACQ,eAAD,EAAkB;AAC9DS,IAAAA,OAAO,CAACC,KAAD,EAAQ;AACbJ,MAAAA,eAAe,CACb,gEADa,CAAf;AAGD;;AAL6D,GAAlB,CAA9C;;AAQA,QAAMK,MAAM,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AAChCN,IAAAA,cAAc,CAAC;AACbO,MAAAA,SAAS,EAAE;AAAEF,QAAAA,MAAF;AAAUC,QAAAA;AAAV;AADE,KAAD,CAAd;AAGD,GAJD;;AAMA,MAAIL,IAAJ,EAAU;AACRN,IAAAA,UAAU,CAAC;AAAEa,MAAAA,MAAM,EAAE,KAAV;AAAiBH,MAAAA,MAAM,EAAE,EAAzB;AAA6BC,MAAAA,KAAK,EAAE;AAApC,KAAD,CAAV;AACAT,IAAAA,OAAO,CAAC,OAAD,CAAP;AACD;;AAED,sBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGC,YAAY,KAAK,EAAjB,gBAAsB,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQA,YAAR,CAAtB,GAAsD,IAFzD,EAGGJ,OAAO,CAACc,MAAR,gBAEG,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMJ,MAAM,CAACV,OAAO,CAACW,MAAT,EAAiBX,OAAO,CAACY,KAAzB,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAFH,GAMG,IATN,CADF;AAaD,CApCD;AAsCA,MAAMG,MAAM,GAAGvB,MAAM,CAACwB,GAAI;;;CAA1B;AAKA,MAAMC,MAAM,GAAGzB,MAAM,CAAC0B,MAAO;;;;;;;;;;CAA7B","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport styled from \"styled-components\";\nimport { useRecoilState } from \"recoil\";\nimport { sessionState, bodyState } from \"../recoil/atoms\";\nimport { OK, Error, Title } from \"../style/styles\";\n\nconst LOGOUT_MUTATION = gql`\n  mutation logout($userid: ID!, $token: String!) {\n    logout(userid: $userid, token: $token) {\n      _id\n    }\n  }\n`;\n\nexport default () => {\n  const [session, setSession] = useRecoilState(sessionState);\n  const [body, setBody] = useRecoilState(bodyState);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [logoutMutation, { data }] = useMutation(LOGOUT_MUTATION, {\n    onError(error) {\n      setErrorMessage(\n        \"Ha ocurrido un error inesperado, vuelve a intentarlo más tarde\",\n      );\n    },\n  });\n\n  const logout = (userid, token) => {\n    logoutMutation({\n      variables: { userid, token },\n    });\n  };\n\n  if (data) {\n    setSession({ logged: false, userid: \"\", token: \"\" });\n    setBody(\"Login\");\n  }\n\n  return (\n    <Logout>\n      <Title>Logout</Title>\n      {errorMessage !== \"\" ? <Error>{errorMessage}</Error> : null}\n      {session.logged\n        ? (\n          <Button onClick={() => logout(session.userid, session.token)}>\n            Confirme que desea salir\n          </Button>\n        )\n        : null}\n    </Logout>\n  );\n};\n\nconst Logout = styled.div`\n  color: #333333;\n  margin: 2em;\n`;\n\nconst Button = styled.button`\n  color: black;\n  font-weight: bold;\n  height: 30px;\n  width: 500px;\n  border: 1px solid #333;\n  &:hover {\n    background-color: #bbbbbb;\n    cursor: pointer;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}