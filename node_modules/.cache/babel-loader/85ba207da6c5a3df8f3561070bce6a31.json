{"ast":null,"code":"var _jsxFileName = \"/home/alonso/GitHub/RecetasMH/src/components/Signin.jsx\";\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { useRecoilState } from \"recoil\";\nimport \"./styles.css\";\nimport { adminModeAtom } from \"../recoil/atoms\";\nconst SIGNIN = gql`\n    mutation signin($userName: String!, $pwd: String!) {\n        signin(userName: $userName, pwd: $pwd) {\n            userName\n        }\n    }\n`;\n\nconst Signin = () => {\n  const [, setAdminMode] = useRecoilState(adminModeAtom);\n  let inputUserName;\n  let inputPwd;\n  const [error, setError] = useState(null);\n  const [signin, {\n    data\n  }] = useMutation(SIGNIN, {\n    onError(err) {\n      setError(err.message);\n    }\n\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Signin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"ModuleSignin\",\n    onSubmit: e => {\n      e.preventDefault();\n      inputUserName = document.getElementById(\"inputUserName\").value;\n      inputPwd = document.getElementById(\"inputPwd\").value;\n      signin({\n        variables: {\n          userName: inputUserName,\n          pwd: inputPwd\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"UserName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Nombre de Usuario\"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    id: \"inputUserName\",\n    className: \"Input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Pwd\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"Contrase\\xF1a\"), /*#__PURE__*/React.createElement(\"input\", {\n    required: true,\n    id: \"inputPwd\",\n    type: \"password\",\n    className: \"Input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  })), data ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, \"Usuario \", data.signin.userName, \" creado\") : null, error ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 26\n    }\n  }, error) : null, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"Button\",\n    type: \"submit\",\n    onClick: () => setError(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Crear cuenta\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Button\",\n    onClick: () => {\n      setAdminMode(0);\n      setError(null);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, \"Atr\\xE1s\")));\n};\n\nexport default Signin;","map":{"version":3,"sources":["/home/alonso/GitHub/RecetasMH/src/components/Signin.jsx"],"names":["React","useState","useMutation","gql","useRecoilState","adminModeAtom","SIGNIN","Signin","setAdminMode","inputUserName","inputPwd","error","setError","signin","data","onError","err","message","e","preventDefault","document","getElementById","value","variables","userName","pwd"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport { useRecoilState } from \"recoil\";\n\nimport \"./styles.css\";\nimport { adminModeAtom } from \"../recoil/atoms\";\n\nconst SIGNIN = gql`\n    mutation signin($userName: String!, $pwd: String!) {\n        signin(userName: $userName, pwd: $pwd) {\n            userName\n        }\n    }\n`;\n\nconst Signin = () => {\n    const [, setAdminMode] = useRecoilState(adminModeAtom);\n\n    let inputUserName;\n    let inputPwd;\n\n    const [error, setError] = useState(null);\n    const [signin, { data }] = useMutation(SIGNIN, {\n        onError(err) {\n            setError(err.message);\n        }\n    })\n\n    return (\n        <div className=\"Signin\">\n            <form className=\"ModuleSignin\"\n                onSubmit = { e => {\n                    e.preventDefault();\n                    inputUserName = document.getElementById(\"inputUserName\").value;\n                    inputPwd = document.getElementById(\"inputPwd\").value;\n                    signin({ variables: { userName: inputUserName, pwd: inputPwd }});\n                }}\n            >\n                <div className=\"UserName\">\n                    <div className=\"Text\">Nombre de Usuario</div>\n                    <input required id=\"inputUserName\" className=\"Input\"/>\n                </div>\n                <div className=\"Pwd\">\n                    <div className=\"Text\">Contraseña</div>\n                    <input required id=\"inputPwd\" type=\"password\" className=\"Input\"/>\n                </div>\n\n                {data ? <div className=\"Text\">Usuario {data.signin.userName} creado</div> : null}\n                {error ? <div>{error}</div> : null}\n\n                <button className=\"Button\" type=\"submit\" onClick={() => setError(null)}>Crear cuenta</button>\n\n                <div className=\"Button\" onClick={() => {setAdminMode(0); setError(null)}}>Atrás</div>\n\n            </form>\n        </div>\n    )\n}\n\nexport default Signin;"]},"metadata":{},"sourceType":"module"}