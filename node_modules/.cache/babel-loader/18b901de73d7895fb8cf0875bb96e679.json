{"ast":null,"code":"var _jsxFileName = \"/home/alonso/GitHub/RecetasMH/src/components/AddIngredient.jsx\";\nimport React, { useState } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport styled from \"styled-components\";\nimport { useRecoilState } from \"recoil\";\nimport { sessionState } from \"../recoil/atoms\";\nimport { OK, Error, Title } from \"../style/styles\";\nconst ADD_INGREDIENT_MUTATION = gql`\n  mutation AddIngredient($name: String!, $userid: ID!, $token: String!) {\n    addIngredient(name: $name, userid: $userid, token: $token) {\n      _id\n      name\n    }\n  }\n`;\nconst INGEDIENTS_LIST_QUERY = gql`\n  {\n    ingredients {\n      _id\n      name\n    }\n  }\n`;\nexport default (() => {\n  const [session] = useRecoilState(sessionState);\n  const [addIngredient, {\n    data,\n    error\n  }] = useMutation(ADD_INGREDIENT_MUTATION, {\n    update(cache, {\n      data: {\n        addIngredient\n      }\n    }) {\n      const {\n        ingredients\n      } = cache.readQuery({\n        query: INGEDIENTS_LIST_QUERY\n      });\n      cache.writeQuery({\n        query: INGEDIENTS_LIST_QUERY,\n        data: {\n          ingredients: ingredients.concat([addIngredient])\n        }\n      });\n    },\n\n    onError(error) {\n      if (error.message.includes(\"duplicate key\")) {\n        console.error(\"Error: Dupulicated Key\");\n      } else if (error.message.includes(\"Cast to ObjectId\")) {\n        console.log(\"Usuario no loggeado\");\n      } else {\n        console.log(\"Ha ocurrido un error inesperado, vuelve a intentarlo más tarde\");\n      }\n    }\n\n  });\n\n  const add = name => {\n    console.log(`userid: ${session.userid}, token: ${session.token}`);\n    addIngredient({\n      variables: {\n        name: name,\n        userid: session.userid,\n        token: session.token\n      }\n    });\n  };\n\n  let output = \"\";\n\n  if (data) {\n    output = /*#__PURE__*/React.createElement(OK, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }, \"Ingrediente a\\xF1adido con \\xE9xito\");\n  }\n\n  if (error) {\n    if (error.message.includes(\"duplicate key\")) {\n      output = /*#__PURE__*/React.createElement(Error, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, \"El ingrediente ya existe\");\n    } else if (error.message.includes(\"Cast to ObjectId\")) {\n      output = /*#__PURE__*/React.createElement(Error, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }\n      }, \"El usuario no est\\xE1 loggeado\");\n    } else {\n      output = /*#__PURE__*/React.createElement(Error, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }\n      }, \"Ha ocurrido un error inesperado, vuelve a intentarlo m\\xE1s tarde\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(AddIngredient, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"A\\xF1adir nuevo ingrediente\"), output, /*#__PURE__*/React.createElement(Input, {\n    id: \"name\",\n    type: \"text\",\n    placeholder: \"Nombre del Ingrediente\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      add(document.getElementById(\"name\").value);\n      document.getElementById(\"name\").value = \"\";\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, \"A\\xF1adir Ingrediente\"));\n});\nconst AddIngredient = styled.div`\n  color: #333333;\n  margin: 2em;\n  display: flex;\n  flex-direction: column;\n`;\nconst Input = styled.input`\n  border: 1px solid #333;\n  height: 30px;\n  width: 500px;\n`;\nconst Button = styled.button`\n  color: black;\n  font-weight: bold;\n  height: 30px;\n  width: 500px;\n  border: 1px solid #333;\n  &:hover {\n    background-color: #bbbbbb;\n    cursor: pointer;\n  }\n`;","map":{"version":3,"sources":["/home/alonso/GitHub/RecetasMH/src/components/AddIngredient.jsx"],"names":["React","useState","gql","useMutation","styled","useRecoilState","sessionState","OK","Error","Title","ADD_INGREDIENT_MUTATION","INGEDIENTS_LIST_QUERY","session","addIngredient","data","error","update","cache","ingredients","readQuery","query","writeQuery","concat","onError","message","includes","console","log","add","name","userid","token","variables","output","document","getElementById","value","AddIngredient","div","Input","input","Button","button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport styled from \"styled-components\";\nimport { useRecoilState } from \"recoil\";\nimport { sessionState } from \"../recoil/atoms\";\nimport { OK, Error, Title } from \"../style/styles\";\n\nconst ADD_INGREDIENT_MUTATION = gql`\n  mutation AddIngredient($name: String!, $userid: ID!, $token: String!) {\n    addIngredient(name: $name, userid: $userid, token: $token) {\n      _id\n      name\n    }\n  }\n`;\n\nconst INGEDIENTS_LIST_QUERY = gql`\n  {\n    ingredients {\n      _id\n      name\n    }\n  }\n`;\n\nexport default () => {\n  const [session] = useRecoilState(sessionState);\n  const [addIngredient, { data, error }] = useMutation(\n    ADD_INGREDIENT_MUTATION,\n    {\n      update(cache, { data: { addIngredient } }) {\n        const { ingredients } = cache.readQuery({\n          query: INGEDIENTS_LIST_QUERY,\n        });\n        cache.writeQuery({\n          query: INGEDIENTS_LIST_QUERY,\n          data: { ingredients: ingredients.concat([addIngredient]) },\n        });\n      },\n      onError(error) {\n        if (error.message.includes(\"duplicate key\")) {\n          console.error(\"Error: Dupulicated Key\");\n        } else if (error.message.includes(\"Cast to ObjectId\")) {\n          console.log(\"Usuario no loggeado\");\n        } else {\n          console.log(\n            \"Ha ocurrido un error inesperado, vuelve a intentarlo más tarde\",\n          );\n        }\n      },\n    },\n  );\n\n  const add = (name) => {\n    console.log(`userid: ${session.userid}, token: ${session.token}`);\n    addIngredient({\n      variables: { name: name, userid: session.userid, token: session.token },\n    });\n  };\n\n  let output = \"\";\n\n  if (data) {\n    output = (<OK>Ingrediente añadido con éxito</OK>);\n  }\n\n  if (error) {\n    if (error.message.includes(\"duplicate key\")) {\n      output = (\n        <Error>El ingrediente ya existe</Error>\n      );\n    } else if (error.message.includes(\"Cast to ObjectId\")) {\n      output = (\n        <Error>El usuario no está loggeado</Error>\n      );\n    } else {\n      output = (\n        <Error>\n          Ha ocurrido un error inesperado, vuelve a intentarlo más tarde\n        </Error>\n      );\n    }\n  }\n  return (\n    <AddIngredient>\n      <Title>Añadir nuevo ingrediente</Title>\n      {output}\n      <Input id=\"name\" type=\"text\" placeholder=\"Nombre del Ingrediente\"></Input>\n      <Button\n        onClick={() => {\n          add(document.getElementById(\"name\").value);\n          document.getElementById(\"name\").value = \"\";\n        }}\n      >\n        Añadir Ingrediente\n      </Button>\n    </AddIngredient>\n  );\n};\n\nconst AddIngredient = styled.div`\n  color: #333333;\n  margin: 2em;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Input = styled.input`\n  border: 1px solid #333;\n  height: 30px;\n  width: 500px;\n`;\n\nconst Button = styled.button`\n  color: black;\n  font-weight: bold;\n  height: 30px;\n  width: 500px;\n  border: 1px solid #333;\n  &:hover {\n    background-color: #bbbbbb;\n    cursor: pointer;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}