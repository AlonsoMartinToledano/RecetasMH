{"ast":null,"code":"var _jsxFileName = \"/home/alonso/GitHub/RecetasMH/src/components/Signin.jsx\";\nimport React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nimport { OK, Error, Title } from \"../style/styles\";\nconst SIGNIN = gql`\n    mutation signin($userName: String!, $pwd: String!) {\n        signin(userName: $userName, pwd: $pwd) {\n            userName\n        }\n    }\n`;\nexport default (() => {\n  let inputUserName;\n  let inputPwd;\n  const [error, setError] = useState(null);\n  const [signin, {\n    data\n  }] = useMutation(SIGNIN, {\n    onError(err) {\n      setError(\"El usuario ya existe\");\n    }\n\n  });\n  return /*#__PURE__*/React.createElement(Signin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, \"Signin\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"ModuleSignin\",\n    onSubmit: e => {\n      e.preventDefault();\n      inputUserName = document.getElementById(\"inputUserName\").value;\n\n      if (document.getElementById(\"inputPwd\").value === document.getElementById(\"inputPwd2\").value) {\n        inputPwd = document.getElementById(\"inputPwd\").value;\n        signin({\n          variables: {\n            userName: inputUserName,\n            pwd: inputPwd\n          }\n        });\n      } else {\n        setError(\"La contrase単a no coincide\");\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Signin, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    required: true,\n    id: \"inputUserName\",\n    placeholder: \"Nombre de usuario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    required: true,\n    id: \"inputPwd\",\n    type: \"password\",\n    placeholder: \"Contrase\\xF1a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    required: true,\n    id: \"inputPwd2\",\n    type: \"password\",\n    placeholder: \"Contrase\\xF1a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  }), data ? /*#__PURE__*/React.createElement(OK, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }\n  }, \"Usuario \", data.signin.userName, \" creado\") : null, error ? /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 30\n    }\n  }, error) : null, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: () => setError(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Enviar\"))));\n});\nconst Signin = styled.div`\n  color: #333333;\n  margin: 2em;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nconst Input = styled.input`\n  border: 1px solid #333;\n  height: 30px;\n  width: 500px;\n`;\nconst Button = styled.button`\n  color: black;\n  font-weight: bold;\n  height: 30px;\n  width: 500px;\n  border: 1px solid #333;\n  &:hover {\n    background-color: #bbbbbb;\n    cursor: pointer;\n  }\n`;","map":{"version":3,"sources":["/home/alonso/GitHub/RecetasMH/src/components/Signin.jsx"],"names":["React","useState","useMutation","gql","styled","OK","Error","Title","SIGNIN","inputUserName","inputPwd","error","setError","signin","data","onError","err","e","preventDefault","document","getElementById","value","variables","userName","pwd","Signin","div","Input","input","Button","button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport styled from \"styled-components\";\nimport { OK, Error, Title } from \"../style/styles\";\n\nconst SIGNIN = gql`\n    mutation signin($userName: String!, $pwd: String!) {\n        signin(userName: $userName, pwd: $pwd) {\n            userName\n        }\n    }\n`;\n\nexport default () => {\n    let inputUserName;\n    let inputPwd;\n\n    const [error, setError] = useState(null);\n    const [signin, { data }] = useMutation(SIGNIN, {\n        onError(err) {\n            setError(\"El usuario ya existe\");\n        }\n    })\n\n    return (\n        <Signin>\n            <Title>Signin</Title>\n            <form className=\"ModuleSignin\"\n                onSubmit = { e => {\n                    e.preventDefault();\n                    inputUserName = document.getElementById(\"inputUserName\").value;\n                    if (document.getElementById(\"inputPwd\").value === document.getElementById(\"inputPwd2\").value) {\n                        inputPwd = document.getElementById(\"inputPwd\").value;\n                        signin({ variables: { userName: inputUserName, pwd: inputPwd }});\n                    } else {\n                        setError(\"La contrase単a no coincide\");\n                    }\n                }}\n            >\n                <Signin>\n                    <Input required id=\"inputUserName\" placeholder=\"Nombre de usuario\"/>\n                    <Input required id=\"inputPwd\" type=\"password\" placeholder=\"Contrase単a\" />\n                    <Input required id=\"inputPwd2\" type=\"password\" placeholder=\"Contrase単a\" />\n\n                    {data ? <OK>Usuario {data.signin.userName} creado</OK> : null}\n                    {error ? <Error>{error}</Error> : null}\n\n                    <Button type=\"submit\" onClick={() => setError(null)}>Enviar</Button>\n                </ Signin>\n            </form>\n        </Signin>\n    )\n}\n\nconst Signin = styled.div`\n  color: #333333;\n  margin: 2em;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Input = styled.input`\n  border: 1px solid #333;\n  height: 30px;\n  width: 500px;\n`;\n\nconst Button = styled.button`\n  color: black;\n  font-weight: bold;\n  height: 30px;\n  width: 500px;\n  border: 1px solid #333;\n  &:hover {\n    background-color: #bbbbbb;\n    cursor: pointer;\n  }\n`;"]},"metadata":{},"sourceType":"module"}