{"ast":null,"code":"var _jsxFileName = \"/home/alonso/GitHub/RecetasMH/src/components/Login.jsx\";\nimport React, { useState } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport styled from \"styled-components\";\nimport { useRecoilState } from \"recoil\";\nimport { sessionState } from \"../recoil/atoms\";\nimport { OK, Error, Title } from \"../style/styles\";\nconst LOGIN_MUTATION = gql`\n  mutation login($userName: String!, $pwd: String!) {\n    login(userName: $userName, pwd: $pwd) {\n      _id\n      token\n    }\n  }\n`;\nexport default (() => {\n  const [session, setSession] = useRecoilState(sessionState);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [loginMutation, {\n    data\n  }] = useMutation(LOGIN_MUTATION, {\n    onError(error) {\n      setSession({\n        userid: \"\",\n        token: \"\",\n        logged: false\n      });\n\n      if (error.message.includes(\"Non existent or not authorized\")) {\n        console.error(\"Usuario o contraseña no válidos\");\n        setErrorMessage(\"Usuario o contraseña no válidos\");\n      } else {\n        setErrorMessage(\"Ha ocurrido un error inesperado, vuelve a intentarlo más tarde\");\n      }\n    }\n\n  });\n\n  const login = (userName, pwd) => {\n    loginMutation({\n      variables: {\n        userName,\n        pwd\n      }\n    });\n  };\n\n  if (data) {\n    if (session.token !== data.login.token) {\n      setSession({\n        userid: data.login._id,\n        token: data.login.token,\n        logged: true\n      });\n      setErrorMessage(\"\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Login\"), errorMessage !== \"\" ? /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 30\n    }\n  }, errorMessage) : null, session.logged ? /*#__PURE__*/React.createElement(OK, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Sesi\\xF3n iniciada correcatmente\") : /*#__PURE__*/React.createElement(Login, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    id: \"userName\",\n    type: \"text\",\n    placeholder: \"Nombre de usuario\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    id: \"pwd\",\n    type: \"password\",\n    placeholder: \"Contrase\\xF1a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => {\n      login(document.getElementById(\"userName\").value, document.getElementById(\"pwd\").value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Enviar\")));\n});\nconst Login = styled.div`\n  color: #333333;\n  margin: 2em;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nconst Input = styled.input`\n  border: 1px solid #333;\n  height: 30px;\n  width: 500px;\n`;\nconst Button = styled.button`\n  color: black;\n  font-weight: bold;\n  height: 30px;\n  width: 500px;\n  border: 1px solid #333;\n  &:hover {\n    background-color: #bbbbbb;\n    cursor: pointer;\n  }\n`;","map":{"version":3,"sources":["/home/alonso/GitHub/RecetasMH/src/components/Login.jsx"],"names":["React","useState","gql","useMutation","styled","useRecoilState","sessionState","OK","Error","Title","LOGIN_MUTATION","session","setSession","errorMessage","setErrorMessage","loginMutation","data","onError","error","userid","token","logged","message","includes","console","login","userName","pwd","variables","_id","document","getElementById","value","Login","div","Input","input","Button","button"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport styled from \"styled-components\";\nimport { useRecoilState } from \"recoil\";\nimport { sessionState } from \"../recoil/atoms\";\nimport { OK, Error, Title } from \"../style/styles\";\n\nconst LOGIN_MUTATION = gql`\n  mutation login($userName: String!, $pwd: String!) {\n    login(userName: $userName, pwd: $pwd) {\n      _id\n      token\n    }\n  }\n`;\n\nexport default () => {\n  const [session, setSession] = useRecoilState(sessionState);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [loginMutation, { data }] = useMutation(LOGIN_MUTATION, {\n    onError(error) {\n      setSession({\n        userid: \"\",\n        token: \"\",\n        logged: false,\n      });\n      if (error.message.includes(\"Non existent or not authorized\")) {\n        console.error(\"Usuario o contraseña no válidos\");\n        setErrorMessage(\"Usuario o contraseña no válidos\");\n      } else {\n        setErrorMessage(\n          \"Ha ocurrido un error inesperado, vuelve a intentarlo más tarde\",\n        );\n      }\n    },\n  });\n\n  const login = (userName, pwd) => {\n    loginMutation({\n      variables: { userName, pwd },\n    });\n  };\n\n  if (data) {\n    if (session.token !== data.login.token) {\n      setSession({\n        userid: data.login._id,\n        token: data.login.token,\n        logged: true,\n      });\n      setErrorMessage(\"\");\n    }\n  }\n  return (\n    <Login>\n      <Title>Login</Title>\n      {errorMessage !== \"\" ? <Error>{errorMessage}</Error> : null}\n      {session.logged\n        ? (\n          <OK>Sesión iniciada correcatmente</OK>\n        )\n        : (\n          <Login>\n            <Input\n              id=\"userName\"\n              type=\"text\"\n              placeholder=\"Nombre de usuario\"\n            >\n            </Input>\n            <Input id=\"pwd\" type=\"password\" placeholder=\"Contraseña\"></Input>\n            <Button\n              onClick={() => {\n                login(\n                  document.getElementById(\"userName\").value,\n                  document.getElementById(\"pwd\").value,\n                );\n              }}\n            >\n              Enviar\n            </Button>\n          </Login>\n        )}\n    </Login>\n  );\n};\n\nconst Login = styled.div`\n  color: #333333;\n  margin: 2em;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Input = styled.input`\n  border: 1px solid #333;\n  height: 30px;\n  width: 500px;\n`;\n\nconst Button = styled.button`\n  color: black;\n  font-weight: bold;\n  height: 30px;\n  width: 500px;\n  border: 1px solid #333;\n  &:hover {\n    background-color: #bbbbbb;\n    cursor: pointer;\n  }\n`;\n"]},"metadata":{},"sourceType":"module"}