{"ast":null,"code":"var _jsxFileName = \"/home/alonso/GitHub/RecetasMH/src/components/AddRecipe.jsx\";\nimport React, { useState } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport styled from \"styled-components\";\nimport { useRecoilState } from \"recoil\";\nimport { sessionState } from \"../recoil/atoms\";\nimport { OK, Error, Title } from \"../style/styles\";\nimport UploadFile from \"./UploadFile\";\nconst ADD_RECIPE_MUTATION = gql`\n    mutation addRecipe($userid: ID!, $token: String!, $title: String!, $description: String!, $steps: [StepInput!]!, $ingredients: [ID!]!, $mainImage: FileInput!) {\n        addRecipe(userid: $userid, token: $token, title: $title, description: $description, steps: $steps, ingredients: $ingredients, mainImage: $mainImage) {\n            title\n            steps {\n                description\n                image {\n                    mimetype\n                }\n            }\n            ingredients {\n                _id\n            }\n            mainImage {\n                mimetype\n            }\n        }\n    }\n`;\nexport default (() => {\n  const [session] = useRecoilState(sessionState);\n  const [addRecipe, {\n    data\n  }] = useMutation(ADD_RECIPE_MUTATION, {// refetchQueries: [{ query: INGREDIENTS }],\n    // onError(err) {\n    //     setError(err.message);\n    // }\n  });\n\n  if (data) {\n    console.log(data.addRecipe);\n  }\n\n  let inputTitle;\n  let inputDescription;\n  const steps = [];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"ModuleAddIngredient\",\n    onSubmit: e => {\n      e.preventDefault();\n      inputTitle = document.getElementById(\"inputTitle\").value;\n      inputDescription = document.getElementById(\"inputDescription\").value;\n      addRecipe({\n        variables: {\n          userid: session.userid,\n          token: session.token,\n          title: inputTitle,\n          description: inputDescription,\n          steps: steps,\n          ingredients: [\"5f0afe3d7375a5043ceb9cef\"],\n          mainImage: {\n            url: \"url\",\n            mimetype: \"mimetype\",\n            encoding: \"encoding\"\n          }\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UploadFile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"T\\xEDtulo\"), /*#__PURE__*/React.createElement(Input, {\n    required: true,\n    id: \"inputTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, \"Pasos\"), /*#__PURE__*/React.createElement(Step, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    required: true,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(UploadFile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Step, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    required: true,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(UploadFile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Step, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    required: true,\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(UploadFile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  })))));\n});\nconst Input = styled.input`\n  border: 1px solid #333;\n  height: 30px;\n  width: 500px;\n`;\nconst Step = styled.div`\n  border: 1px solid #333;\n  height: 30px;\n  width: 500px;\n`;","map":{"version":3,"sources":["/home/alonso/GitHub/RecetasMH/src/components/AddRecipe.jsx"],"names":["React","useState","gql","useMutation","styled","useRecoilState","sessionState","OK","Error","Title","UploadFile","ADD_RECIPE_MUTATION","session","addRecipe","data","console","log","inputTitle","inputDescription","steps","e","preventDefault","document","getElementById","value","variables","userid","token","title","description","ingredients","mainImage","url","mimetype","encoding","Input","input","Step","div"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport gql from \"graphql-tag\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport styled from \"styled-components\";\nimport { useRecoilState } from \"recoil\";\nimport { sessionState } from \"../recoil/atoms\";\nimport { OK, Error, Title } from \"../style/styles\";\nimport UploadFile from \"./UploadFile\";\n\nconst ADD_RECIPE_MUTATION = gql`\n    mutation addRecipe($userid: ID!, $token: String!, $title: String!, $description: String!, $steps: [StepInput!]!, $ingredients: [ID!]!, $mainImage: FileInput!) {\n        addRecipe(userid: $userid, token: $token, title: $title, description: $description, steps: $steps, ingredients: $ingredients, mainImage: $mainImage) {\n            title\n            steps {\n                description\n                image {\n                    mimetype\n                }\n            }\n            ingredients {\n                _id\n            }\n            mainImage {\n                mimetype\n            }\n        }\n    }\n`;\n\nexport default () => {\n  const [session] = useRecoilState(sessionState);\n\n  const [addRecipe, { data }] = useMutation(ADD_RECIPE_MUTATION, {\n    // refetchQueries: [{ query: INGREDIENTS }],\n\n    // onError(err) {\n    //     setError(err.message);\n    // }\n  })\n\n  if (data) {\n    console.log(data.addRecipe);\n  }\n\n  let inputTitle;\n  let inputDescription;\n  const steps = [];\n\n  return (\n    <div>\n      <form className=\"ModuleAddIngredient\"\n        onSubmit = { e => {\n            e.preventDefault();\n            inputTitle = document.getElementById(\"inputTitle\").value;\n            inputDescription = document.getElementById(\"inputDescription\").value;\n            addRecipe({ variables: { userid: session.userid, token: session.token, title: inputTitle, description: inputDescription, \n              steps: steps, ingredients: [\"5f0afe3d7375a5043ceb9cef\"], mainImage: {url: \"url\", mimetype: \"mimetype\", encoding: \"encoding\"} }});\n        }}\n      >\n        <UploadFile />\n\n        <div>\n          <div>Título</div>\n          <Input required id=\"inputTitle\"/>\n        </div>\n\n        <div>\n          <div>Pasos</div>\n          <Step>\n            <textarea required type=\"text\" />\n            <UploadFile />\n          </Step>\n\n          <Step>\n            <textarea required type=\"text\" />\n            <UploadFile />\n          </Step>\n\n          <Step>\n            <textarea required type=\"text\" />\n            <UploadFile />\n          </Step>\n        </div>\n\n      </form>\n    </div>\n  );\n};\n\nconst Input = styled.input`\n  border: 1px solid #333;\n  height: 30px;\n  width: 500px;\n`;\n\nconst Step = styled.div`\n  border: 1px solid #333;\n  height: 30px;\n  width: 500px;\n`;"]},"metadata":{},"sourceType":"module"}